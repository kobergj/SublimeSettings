{//"shell": "/usr/bin/sh",
    "env": {"GOPATH": "$HOME/server", "PATH":"$PATH:$GOPATH"},
    "on_save": [
        {"cmd": "gs9o_open", "args": {
            "run": [
                "sh",
                "go build errors ."
                // "go test -i && go vet && go test -c -o '/Users/jkoberg/TestBinaries/lastsave.test'"//" && gometalinter ."
                ] //  && go test -tags integration -c -o '/Users/jkoberg/TestBinaries/integration.test'" // && go build . &&  go test -bench=.  && go generate
        }}
    ],
    // "autocomplete_closures": false,
    // "complete_builtins": false,
    "fmt_cmd": ["goimports"],
    // "9o_show_end": true,
    // "comp_lint_enabled": true,
    // "lint_enabled": false,
    "shell": ["/bin/bash", "--noprofile", "-c", "$CMD"],
    "ipc_timeout": 10,
    // "on_save": [
    //     {"cmd": "gs_comp_lint"},
    // ],

    // enable comp-lint, this will effectively disable the live linter
// "comp_lint_enabled": true,

// // list of commands to run
// "comp_lint_commands": [
//     // run `golint` on all files in the package
//     // "shell":true is required in order to run the command through your shell (to expand `*.go`)
//     // also see: the documentation for the `shell` setting in the default settings file ctrl+dot,ctrl+4
//     {"cmd": ["golint *.go"], "shell": true},

//     // run go vet on the package
//     // {"cmd": ["go", "vet"]}

//     // run `go install` on the package. GOBIN is set,
//     // so `main` packages shouldn't result in the installation of a binary
//     {"cmd": ["go", "install"]}
// ],

// "on_save": [
//     // run comp-lint when you save,
//     // naturally, you can also bind this command `gs_comp_lint`
//     // to a key binding if you want
//     {"cmd": "gs_comp_lint"}
// ]
}

//   && go test -bench=.
