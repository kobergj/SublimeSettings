{
	"9o.hist./Users/julian/Documents/GoLang":
	[
		"go build go test"
	],
	"9o.hist./Users/julian/Documents/Test":
	[
		"go run goODBCtest.go:8",
		"cd /Users/julian/Documents/Test/",
		"cd $GOPATH/src",
		"go run goODBCtest.go"
	],
	"9o.hist./Users/julian/Projects/AmqForecastConsumer/Jobs/GO/Libs/src/AmqSample":
	[
		"go run",
		"go",
		"go run main.go"
	],
	"9o.hist./Users/julian/Projects/AmqForecastConsumer/Jobs/GO/Projects/src/WareHousePackageForecastProcessor":
	[
		"go get \"github.com/gmallard/stompngo\"",
		"go get \"github.com/alexbrainman/odbc/\"",
		"go test -v",
		"go build ware_house_package_forecast_processor.go -i -v",
		"go build",
		"go build -i -v ./...",
		"go test -tags=integration",
		"go clean"
	],
	"9o.hist./Users/julian/Projects/Go-Libs":
	[
		"go generate",
		"go generate ./..."
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource":
	[
		"cd .."
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/Implementations":
	[
		"cd .."
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/Implementations/Sql":
	[
		"go env",
		"go get \"github.com/windelnde/Go-Projects/CodeGenerator\"",
		"go generate",
		"cd .",
		"cd .."
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/Implementations/Sql/Builder":
	[
		"go get github.com/lib/pq",
		"go version",
		"go get \"github.com/hashicorp/consul/api\"",
		"go get \"github.com/hashicorp/vault/api\""
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/Implementations/Sql/ResultProcessors":
	[
		"go:generate"
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/Implementations/Sql/ResultProcessors/Sql":
	[
		"go test -bench",
		"go test -bench .",
		"go test '-bench .''",
		"go test '-bench .'",
		"go test '-bench=.'",
		"go test -bench=."
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/Implementations/Sql/SqlToModelMapping":
	[
		"go version",
		"echo $GOPATH",
		"go get \"github.com/windelnde/Go-Projects/CodeGenerator\"",
		"cd .."
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/Implementations/WebService/DataProviders":
	[
		"go go:generate",
		"go generatew",
		"go generate"
	],
	"9o.hist./Users/julian/Projects/Go-Libs/DataSource/IntegrationTests":
	[
		"go test -tags=\"Integration\"",
		"go get",
		"isql",
		"isql exasolution-io418sys_64",
		"go version",
		"go get github.com/alexbrainman/odbc",
		"go install github.com/alexbrainman/odbc",
		"go get -u github.com/alexbrainman/odbc",
		"sh /Users/julian/Downloads/EXASolution_ODBC-5.0.12/exaodbc_wrapper exasolution-io418sys_64",
		"go test -all",
		"go test go test -tags=\"Integration\"",
		"go test -tags=\"integration\"",
		"go test -tags=\"all\"",
		"go test -tags=\"exasol\"",
		"go test -tags=\"postgre\"",
		"go test exasol",
		"go test -run exasol",
		"go test -run Exasol",
		"go test -run Test_Exasol_Get",
		"go test integration",
		"go test -run integration",
		"go test -tags integration",
		"go test",
		"go test -run Postgre",
		"go test -run /Build",
		"go test -run /Postgre",
		"go test integration -run /Postgre",
		"go test -integration -run /Postgre",
		"go test -integration",
		"go test -flags \"integration\"",
		"go test -flag \"integration\"",
		"go",
		"go test -tags \"integration\"",
		"go test -tag=integration -run /Postgre",
		"go test -tags \"integration\" -run /Postgre*",
		"GoSublime r16.07.09-1 9o: type `help` for help and command documentation\n\n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 194.909881ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./Common.go:10: undefined: ds in ds.DataSource\n  ./Common.go:20: undefined: dsConfig\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 159.802653ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./Common.go:22: undefined: dsConfig\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.905067484s ]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{AnotherString 4 false 2011-01-31 01:00:00 +0000 +0000 2021-01-03 03:06:17 +0100 +0100 2.89 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  --- FAIL: Test_DataSource_Store (0.35s)\n      --- FAIL: Test_DataSource_Store/Postgre_Store_One (0.35s)\n        DataSourceStore_test.go:114: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc420091c00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n    DataSourceBuild_test.go:32: \n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.555s\n  \n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.841493202s ]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{AnotherString 4 false 2011-01-31 01:00:00 +0000 +0000 2021-01-03 03:06:17 +0100 +0100 2.89 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  --- FAIL: Test_DataSource_Store (0.38s)\n      --- FAIL: Test_DataSource_Store/Postgre_Store_One (0.38s)\n        DataSourceStore_test.go:114: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc4200a9c00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n    DataSourceBuild_test.go:32: \n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.660s\n  \n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 2.666292895s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.256s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.214s\n  \n  DataSourceStore_test.go:1: possible malformed +build comment\n  DataSourceStore_test.go:40: github.com/windelnde/Go-Libs/Common/FilteringCondition.Predicate composite literal uses unkeyed fields\n  exit status 1\n  \n  exit status 1\n[ `go test` | done: 1.012385264s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.173s\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # go test\n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.972965161s ]\n  --- FAIL: Test_DataSource_Build (0.03s)\n      --- FAIL: Test_DataSource_Build/SqlRows-ExasolConfig (0.03s)\n        DataSourceBuild_test.go:98: \n          TestCase: SqlRows-ExasolConfig failed.\n           Building the DataSource failed \n          with Error \n          CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}} \n          instead of expected \n          <nil>\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{AnotherString 4 false 2011-01-31 01:00:00 +0000 +0000 2021-01-03 03:06:17 +0100 +0100 2.89 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  --- FAIL: Test_DataSource_Store (0.57s)\n      --- FAIL: Test_DataSource_Store/Postgre_Store_One (0.27s)\n        DataSourceStore_test.go:114: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc420091c00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n      --- FAIL: Test_DataSource_Store/Exasol_Store_One (0.30s)\n        DataSourceStore_test.go:114: \n          TestCase: Exasol Store One failed.\n           DataSource.Store \n          stored \n          [0xc420214d80 0xc420214e00 0xc420214e80 0xc420214f00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.818s\n  \n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\"\n  \n  exit status 1\n[ `go test -run Postgre` | done: 1.049325395s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.222s\n[ `go test -run /Postgre` | done: 1.470830754s ]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{AnotherString 4 false 2011-01-31 01:00:00 +0000 +0000 2021-01-03 03:06:17 +0100 +0100 2.89 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  --- FAIL: Test_DataSource_Store (0.47s)\n      --- FAIL: Test_DataSource_Store/Postgre_Store_One (0.47s)\n        DataSourceStore_test.go:114: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc42009bc00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.629s\n  \n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 163.48228ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./Common.go:14: undefined: testing in testing.T\n  ./Common.go:16: undefined: TOSKIP\n  ./Common.go:17: undefined: strings in strings.Contains\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 530.602345ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./Common_test.go:19: undefined: strings in strings.Contains\n  ./DataSourceBuild_test.go:28: runTest redeclared in this block\n    previous declaration at ./Common_test.go:16\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 529.536667ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./DataSourceBuild_test.go:28: runTest redeclared in this block\n    previous declaration at ./Common_test.go:16\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 535.582779ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./DataSourceBuild_test.go:5: imported and not used: \"strings\"\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 2.268606415s ]\n  --- FAIL: Test_DataSource_Build (0.01s)\n      --- FAIL: Test_DataSource_Build/SqlRows-ExasolConfig (0.01s)\n        DataSourceBuild_test.go:79: \n          TestCase: SqlRows-ExasolConfig failed.\n           Building the DataSource failed \n          with Error \n          CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}} \n          instead of expected \n          <nil>\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{AnotherString 4 false 2011-01-31 01:00:00 +0000 +0000 2021-01-03 03:06:17 +0100 +0100 2.89 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  --- FAIL: Test_DataSource_Store (0.73s)\n      --- FAIL: Test_DataSource_Store/Postgre_Store_One (0.35s)\n        DataSourceStore_test.go:114: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc4200a9c00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n      --- FAIL: Test_DataSource_Store/Exasol_Store_One (0.38s)\n        DataSourceStore_test.go:114: \n          TestCase: Exasol Store One failed.\n           DataSource.Store \n          stored \n          [0xc420236d80 0xc420236e00 0xc420236e80 0xc420236f00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.960s\n  \n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\"\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.482502885s ]\n  --- FAIL: Test_DataSource_Build (0.01s)\n      --- FAIL: Test_DataSource_Build/SqlRows-ExasolConfig (0.01s)\n        DataSourceBuild_test.go:79: \n          TestCase: SqlRows-ExasolConfig failed.\n           Building the DataSource failed \n          with Error \n          CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}} \n          instead of expected \n          <nil>\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.243s\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.730320273s ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.636704947s ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 69.507956ms ]\n  can't load package: package .: \n  PostgreGet_test.go:1:1: expected 'package', found 'EOF'\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.730082338s ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n[ `go test -run /Build` | done: 569.225109ms ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.696474263s ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n[ `go test -run /Build` | done: 576.463613ms ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n[ `go test -run /Postgre` | done: 562.589528ms ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n[ `go test -run /Postgre` | done: 588.23831ms ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n[ `go test integration -run /Postgre` | done: 41.112855ms ]\n  can't load package: package integration: cannot find package \"integration\" in any of:\n    /usr/local/go/src/integration (from $GOROOT)\n    /Users/julian/Projects/GoPacksAndLibs/src/integration (from $GOPATH)\n  \n  exit status 1\n[ `go test -integration -run /Postgre` | done: 576.412606ms ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n[ `go test -integration` | done: 572.716062ms ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n[ `go test -tag=integration -run /Postgre` | done: 575.646548ms ]\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # go test -tag=integration -run /Postgre \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 440.277849ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  PostgreGet_test.go:5:15: expected ';', found ':='\n  PostgreGet_test.go:17:5: expected declaration, found 'if'\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [setup failed]\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 478.811454ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:8: undefined: Configuration\n  ./PostgreGet_test.go:9: undefined: fc in fc.FilteringCondition\n  ./PostgreGet_test.go:10: undefined: ds in ds.ResultSet\n  ./PostgreGet_test.go:11: undefined: Error\n  ./PostgreGet_test.go:14: undefined: testing in testing.T\n  ./PostgreGet_test.go:28: undefined: testing in testing.T\n  ./PostgreGet_test.go:32: undefined: fmt in fmt.Println\n  ./PostgreGet_test.go:33: undefined: fmt in fmt.Println\n  ./PostgreGet_test.go:35: undefined: reflect in reflect.DeepEqual\n  ./PostgreGet_test.go:39: undefined: reflect\n  ./PostgreGet_test.go:39: too many errors\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 471.920785ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:18: undefined: Error\n  ./PostgreGet_test.go:21: undefined: testing in testing.T\n  ./PostgreGet_test.go:35: undefined: testing in testing.T\n  ./PostgreGet_test.go:39: undefined: fmt in fmt.Println\n  ./PostgreGet_test.go:40: undefined: fmt in fmt.Println\n  ./PostgreGet_test.go:42: undefined: reflect in reflect.DeepEqual\n  ./PostgreGet_test.go:46: undefined: reflect in reflect.DeepEqual\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 488.315941ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:20: undefined: Error\n  ./PostgreGet_test.go:41: undefined: fmt in fmt.Println\n  ./PostgreGet_test.go:42: undefined: fmt in fmt.Println\n  ./PostgreGet_test.go:44: undefined: reflect in reflect.DeepEqual\n  ./PostgreGet_test.go:48: undefined: reflect in reflect.DeepEqual\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 473.858748ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:21: undefined: Error\n  ./PostgreGet_test.go:45: undefined: reflect in reflect.DeepEqual\n  ./PostgreGet_test.go:49: undefined: reflect in reflect.DeepEqual\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 485.515464ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:22: undefined: Error\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 340.238552ms ]\n  can't load package: package github.com/windelnde/Go-Libs/DataSource/Implementations/Sql/SqlExec/DataProviders/PostgresSqlRows: cannot find package \"github.com/windelnde/Go-Libs/DataSource/Implementations/Sql/SqlExec/DataProviders/PostgresSqlRows\" in any of:\n    /usr/local/go/src/github.com/windelnde/Go-Libs/DataSource/Implementations/Sql/SqlExec/DataProviders/PostgresSqlRows (from $GOROOT)\n    /Users/julian/Projects/GoPacksAndLibs/src/github.com/windelnde/Go-Libs/DataSource/Implementations/Sql/SqlExec/DataProviders/PostgresSqlRows (from $GOPATH)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.663789418s ]\n  --- FAIL: Test_PostgreGet (0.00s)\n    PostgreGet_test.go:33: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidOperation, Message:Implementations: Wont get registered instance for given alias}\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.598s\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.142380337s ]\n  --- FAIL: Test_PostgreGet (0.00s)\n    PostgreGet_test.go:33: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:ModelFactoryContainer.Get threw Error: CustomErrors.Error{Type:InvalidOperation, Message:Factory: Wont get registered instance for given alias}}\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.172s\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 2.233140749s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.152s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.180s\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 2.206348232s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.155s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.163s\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 522.350058ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:34: undefined: m in m.PostgreDataSourceGet\n  ./PostgreGet_test.go:48: undefined: m in m.PostgreDataSourceGet\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 512.625299ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:34: undefined: m in m.PostgreDataSourceGet\n  ./PostgreGet_test.go:48: undefined: m in m.PostgreDataSourceGet\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 527.587048ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:39: undefined: time in time.Date\n  ./PostgreGet_test.go:40: undefined: time in time.Date\n  ./PostgreGet_test.go:53: undefined: time in time.Date\n  ./PostgreGet_test.go:54: undefined: time in time.Date\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.367150561s ]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  exit status 2\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.369s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  panic: runtime error: index out of range [recovered]\n    panic: runtime error: index out of range\n  \n  goroutine 11 [running]:\n  panic(0x2ed4e0, 0xc42000c0e0)\n    /usr/local/go/src/runtime/panic.go:500 +0x1a1\n  testing.tRunner.func1(0xc4201ab380)\n    /usr/local/go/src/testing/testing.go:579 +0x25d\n  panic(0x2ed4e0, 0xc42000c0e0)\n    /usr/local/go/src/runtime/panic.go:458 +0x243\n  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests.Test_PostgreGet.func1(0xc4201ab380)\n    /Users/julian/Projects/Go-Libs/DataSource/IntegrationTests/PostgreGet_test.go:80 +0x551\n  testing.tRunner(0xc4201ab380, 0xc420013ae0)\n    /usr/local/go/src/testing/testing.go:610 +0x81\n  created by testing.(*T).Run\n    /usr/local/go/src/testing/testing.go:646 +0x2ec\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.460405781s ]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  exit status 2\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.451s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  panic: runtime error: index out of range [recovered]\n    panic: runtime error: index out of range\n  \n  goroutine 11 [running]:\n  panic(0x2ed4e0, 0xc42000c0e0)\n    /usr/local/go/src/runtime/panic.go:500 +0x1a1\n  testing.tRunner.func1(0xc4201a9380)\n    /usr/local/go/src/testing/testing.go:579 +0x25d\n  panic(0x2ed4e0, 0xc42000c0e0)\n    /usr/local/go/src/runtime/panic.go:458 +0x243\n  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests.Test_PostgreGet.func1(0xc4201a9380)\n    /Users/julian/Projects/Go-Libs/DataSource/IntegrationTests/PostgreGet_test.go:80 +0x551\n  testing.tRunner(0xc4201a9380, 0xc420013ae0)\n    /usr/local/go/src/testing/testing.go:610 +0x81\n  created by testing.(*T).Run\n    /usr/local/go/src/testing/testing.go:646 +0x2ec\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 525.476413ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./SetupEnviroment_test.go:8: imported and not used: \"os\"\n  ./SetupEnviroment_test.go:9: imported and not used: \"testing\"\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.162084693s ]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  exit status 2\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.205s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  panic: runtime error: index out of range [recovered]\n    panic: runtime error: index out of range\n  \n  goroutine 9 [running]:\n  panic(0x2ed360, 0xc42000c0e0)\n    /usr/local/go/src/runtime/panic.go:500 +0x1a1\n  testing.tRunner.func1(0xc4201ad200)\n    /usr/local/go/src/testing/testing.go:579 +0x25d\n  panic(0x2ed360, 0xc42000c0e0)\n    /usr/local/go/src/runtime/panic.go:458 +0x243\n  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests.Test_PostgreGet.func1(0xc4201ad200)\n    /Users/julian/Projects/Go-Libs/DataSource/IntegrationTests/PostgreGet_test.go:80 +0x551\n  testing.tRunner(0xc4201ad200, 0xc420013310)\n    /usr/local/go/src/testing/testing.go:610 +0x81\n  created by testing.(*T).Run\n    /usr/local/go/src/testing/testing.go:646 +0x2ec\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.872533781s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -flags \"integration\"` | done: 701.145417ms ]\n  exit status 2\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.013s\n  \n  flag provided but not defined: -flags\n  Usage of /var/folders/6m/gmln2l8j2f32g1k7j2xl5kkm0000gp/T/go-build649022782/_/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests/_test/IntegrationTests.test:\n    -test.bench string\n        regular expression per path component to select benchmarks to run\n    -test.benchmem\n        print memory allocations for benchmarks\n    -test.benchtime duration\n        approximate run time for each benchmark (default 1s)\n    -test.blockprofile string\n        write a goroutine blocking profile to the named file after execution\n    -test.blockprofilerate int\n        if >= 0, calls runtime.SetBlockProfileRate() (default 1)\n    -test.count n\n        run tests and benchmarks n times (default 1)\n    -test.coverprofile string\n        write a coverage profile to the named file after execution\n    -test.cpu string\n        comma-separated list of number of CPUs to use for each test\n    -test.cpuprofile string\n        write a cpu profile to the named file during execution\n    -test.memprofile string\n        write a memory profile to the named file after execution\n    -test.memprofilerate int\n        if >=0, sets runtime.MemProfileRate\n    -test.outputdir string\n        directory in which to write profiles\n    -test.parallel int\n        maximum test parallelism (default 4)\n    -test.run string\n        regular expression to select tests and examples to run\n    -test.short\n        run smaller test suite to save time\n    -test.timeout duration\n        if positive, sets an aggregate time limit for all tests\n    -test.trace string\n        write an execution trace to the named file after execution\n    -test.v\n        verbose: print additional output\n  \n  exit status 1\n[ `go test -flag \"integration\"` | done: 640.768357ms ]\n  exit status 2\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  \n  flag provided but not defined: -flag\n  Usage of /var/folders/6m/gmln2l8j2f32g1k7j2xl5kkm0000gp/T/go-build361088209/_/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests/_test/IntegrationTests.test:\n    -test.bench string\n        regular expression per path component to select benchmarks to run\n    -test.benchmem\n        print memory allocations for benchmarks\n    -test.benchtime duration\n        approximate run time for each benchmark (default 1s)\n    -test.blockprofile string\n        write a goroutine blocking profile to the named file after execution\n    -test.blockprofilerate int\n        if >= 0, calls runtime.SetBlockProfileRate() (default 1)\n    -test.count n\n        run tests and benchmarks n times (default 1)\n    -test.coverprofile string\n        write a coverage profile to the named file after execution\n    -test.cpu string\n        comma-separated list of number of CPUs to use for each test\n    -test.cpuprofile string\n        write a cpu profile to the named file during execution\n    -test.memprofile string\n        write a memory profile to the named file after execution\n    -test.memprofilerate int\n        if >=0, sets runtime.MemProfileRate\n    -test.outputdir string\n        directory in which to write profiles\n    -test.parallel int\n        maximum test parallelism (default 4)\n    -test.run string\n        regular expression to select tests and examples to run\n    -test.short\n        run smaller test suite to save time\n    -test.timeout duration\n        if positive, sets an aggregate time limit for all tests\n    -test.trace string\n        write an execution trace to the named file after execution\n    -test.v\n        verbose: print additional output\n  \n  exit status 1\n[ `go test -tags \"integration\"` | done: 135.451868ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  DataSourceBuild_test.go:38:47: missing ',' before newline in composite literal\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [setup failed]\n  \n  exit status 1\n[ `go test -tags \"integration\" -run /Postgre` | done: 130.063017ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  DataSourceBuild_test.go:38:47: missing ',' before newline in composite literal\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [setup failed]\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.906682399s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\" -run /Postgre` | done: 182.389882ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./DataSourceBuild_test.go:12: imported and not used: \"github.com/windelnde/Go-Libs/DataSource/Implementations\" as ds_builder_container\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.908025294s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.013s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\" -run /Postgre` | done: 1.824033089s ]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{AnotherString 2 false 2011-01-24 00:00:00 +0000 +0000 2017-09-18 05:54:12 +0200 +0200 2.843 <nil> <nil> <nil> <nil> <nil>}\n  &{AnotherString 2 false 2011-01-24 00:00:00 +0000 +0000 2017-09-18 05:54:12 +0200 +0200 2.843 <nil> <nil> <nil> <nil> <nil>}\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{AnotherString 4 false 2011-01-31 01:00:00 +0000 +0000 2021-01-03 03:06:17 +0100 +0100 2.89 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  --- FAIL: Test_DataSource_Store (0.27s)\n      --- FAIL: Test_DataSource_Store/Postgre_Store_One (0.27s)\n        DataSourceStore_test.go:114: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc4202d4b00] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  exit status 2\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.787s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"FloatColumn\" IN (2.843)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  panic: runtime error: index out of range [recovered]\n    panic: runtime error: index out of range\n  \n  goroutine 41 [running]:\n  panic(0x43073e0, 0xc4200100c0)\n    /usr/local/go/src/runtime/panic.go:500 +0x1a1\n  testing.tRunner.func1(0xc4202f6540)\n    /usr/local/go/src/testing/testing.go:579 +0x25d\n  panic(0x43073e0, 0xc4200100c0)\n    /usr/local/go/src/runtime/panic.go:458 +0x243\n  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests.Test_PostgreGet.func1(0xc4202f6540)\n    /Users/julian/Projects/Go-Libs/DataSource/IntegrationTests/PostgreGet_test.go:80 +0x551\n  testing.tRunner(0xc4202f6540, 0xc4202cba90)\n    /usr/local/go/src/testing/testing.go:610 +0x81\n  created by testing.(*T).Run\n    /usr/local/go/src/testing/testing.go:646 +0x2ec\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.903103278s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\" -run /Postgre` | done: 1.642611031s ]\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{String 1 true 2016-04-08 00:00:00 +0000 +0000 2014-05-02 04:06:17 +0200 +0200 3.141592653589793 <nil> <nil> <nil> <nil> <nil>}\n  &{AnotherString 2 false 2011-01-24 00:00:00 +0000 +0000 2017-09-18 05:54:12 +0200 +0200 2.843 <nil> <nil> <nil> <nil> <nil>}\n  &{AnotherString 2 false 2011-01-24 00:00:00 +0000 +0000 2017-09-18 05:54:12 +0200 +0200 2.843 <nil> <nil> <nil> <nil> <nil>}\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  &{AnotherString 4 false 2011-01-31 01:00:00 +0000 +0000 2021-01-03 03:06:17 +0100 +0100 2.89 <nil> <nil> <nil> <nil> <nil>}\n  {AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}\n  --- FAIL: Test_DataSource_Store (0.27s)\n      --- FAIL: Test_DataSource_Store/Postgre_Store_One (0.27s)\n        DataSourceStore_test.go:114: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc4202beb00 0xc4202beb80] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  --- FAIL: Test_PostgreGet (0.14s)\n      --- FAIL: Test_PostgreGet/Postgre_FilteringCondition_II (0.01s)\n        PostgreGet_test.go:88: \n          TestCase: Postgre FilteringCondition II failed.\n           DataSource.Get \n          returned \n          [] \n          instead of expected \n          [0xc42008c280]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.772s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"FloatColumn\" IN (2.843)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.926211409s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.855341012s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.875227127s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.895414995s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.906009262s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 73.331234ms ]\n  can't load package: package .: \n  PostgreStore_test.go:1:1: expected 'package', found 'EOF'\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.885909537s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.902353223s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.861117115s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.009s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 511.562305ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./ExasolGet_test.go:11: undefined: fc in fc.FilteringCondition\n  ./ExasolGet_test.go:12: undefined: ds in ds.ResultSet\n  ./ExasolGet_test.go:13: undefined: Error\n  ./ExasolGet_test.go:49: undefined: reflect in reflect.DeepEqual\n  ./ExasolGet_test.go:53: undefined: reflect in reflect.DeepEqual\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 493.027349ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ExasolGet_test.go:12:5: expected declaration, found 'IDENT' ds\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [setup failed]\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 497.506415ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./ExasolGet_test.go:25: undefined: m in m.ExasolDataSourceGet\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 515.522832ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./ExasolGet_test.go:28: undefined: time in time.Date\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 983.52086ms ]\n  --- FAIL: Test_ExasolGet (0.00s)\n    ExasolGet_test.go:40: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:DataProviderBuilderContainer.Get threw Error: CustomErrors.Error{Type:InvalidOperation, Message:DataProviders: Wont get registered instance for given alias}}\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.220342582s ]\n  --- FAIL: Test_ExasolGet (0.02s)\n    ExasolGet_test.go:43: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.026s\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.887996569s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.930135296s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 474.78285ms ]\n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  PostgreStore_test.go:92:1: expected declaration, found '}'\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [setup failed]\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 513.254477ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreStore_test.go:11: undefined: Configuration\n  ./PostgreStore_test.go:12: undefined: Configuration\n  ./PostgreStore_test.go:13: undefined: fc in fc.FilteringCondition\n  ./PostgreStore_test.go:15: undefined: Error\n  ./PostgreStore_test.go:36: undefined: ds_builder_container in ds_builder_container.Get\n  ./PostgreStore_test.go:52: undefined: InvalidOperation\n  ./PostgreStore_test.go:56: undefined: ds_builder_container in ds_builder_container.Get\n  ./PostgreStore_test.go:72: undefined: fmt in fmt.Println\n  ./PostgreStore_test.go:74: undefined: ds in ds.ResultSet\n  ./PostgreStore_test.go:75: undefined: fmt\n  ./PostgreStore_test.go:75: too many errors\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 514.85231ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreStore_test.go:11: undefined: Configuration\n  ./PostgreStore_test.go:12: undefined: Configuration\n  ./PostgreStore_test.go:13: undefined: fc in fc.FilteringCondition\n  ./PostgreStore_test.go:15: undefined: Error\n  ./PostgreStore_test.go:43: undefined: InvalidOperation\n  ./PostgreStore_test.go:51: undefined: ds in ds.ResultSet\n  ./PostgreStore_test.go:54: undefined: reflect in reflect.DeepEqual\n  ./PostgreStore_test.go:58: undefined: reflect in reflect.DeepEqual\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 512.307879ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreStore_test.go:9: imported and not used: \"time\"\n  ./PostgreStore_test.go:22: imported and not used: \"github.com/windelnde/Go-Libs/DataSource/IntegrationTests/Models\" as m\n  ./PostgreStore_test.go:27: undefined: Configuration\n  ./PostgreStore_test.go:28: undefined: Configuration\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 519.54944ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreStore_test.go:9: imported and not used: \"time\"\n  ./PostgreStore_test.go:22: imported and not used: \"github.com/windelnde/Go-Libs/DataSource/IntegrationTests/Models\" as m\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.661617511s ]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  --- FAIL: Test_PostgreStore (0.65s)\n      --- FAIL: Test_PostgreStore/Postgre_Store_One (0.65s)\n        PostgreStore_test.go:82: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc420091400 0xc420091480 0xc420091500] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.665s\n  \n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 75.04773ms ]\n  can't load package: package .: \n  ExasolStore_test.go:1:1: expected 'package', found 'EOF'\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 497.210747ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./ExasolStore_test.go:9: imported and not used: \"time\"\n  ./ExasolStore_test.go:22: imported and not used: \"github.com/windelnde/Go-Libs/DataSource/IntegrationTests/Models\" as m\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 998.663489ms ]\n  --- FAIL: Test_ExasolStore (0.00s)\n    ExasolStore_test.go:44: Storer DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:DataProviderBuilderContainer.Get threw Error: CustomErrors.Error{Type:InvalidOperation, Message:DataProviders: Wont get registered instance for given alias}}\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.183462821s ]\n  --- FAIL: Test_ExasolStore (0.01s)\n    ExasolStore_test.go:50: Getter DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.020s\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.86981452s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\" -run /Postgre` | done: 193.677024ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./ExasolStore_test.go:38: testCases redeclared in this block\n    previous declaration at ./ExasolGet_test.go:37\n  ./PostgreGet_test.go:12: imported and not used: \"github.com/windelnde/Go-Libs/Common/Configuration\"\n  ./PostgreGet_test.go:54: testCases redeclared in this block\n    previous declaration at ./ExasolStore_test.go:38\n  ./PostgreStore_test.go:39: testCases redeclared in this block\n    previous declaration at ./PostgreGet_test.go:54\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.836484669s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.952798693s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.873450062s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.879525128s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.860537913s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\" -run /Postgre` | done: 193.952791ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:12: imported and not used: \"github.com/windelnde/Go-Libs/Common/Configuration\"\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.879145568s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\"` | done: 1.75167002s ]\n  --- FAIL: Test_DataSource_Build (0.01s)\n      --- FAIL: Test_DataSource_Build/Build_Exasol_Rows (0.01s)\n        DataSourceBuild_test.go:72: \n          TestCase: Build Exasol Rows failed.\n           Building the DataSource failed \n          with Error \n          CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}} \n          instead of expected \n          <nil>\n  --- FAIL: Test_ExasolGet (0.01s)\n    ExasolGet_test.go:43: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  --- FAIL: Test_ExasolStore (0.01s)\n    ExasolStore_test.go:50: Getter DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  --- FAIL: Test_PostgreGet (0.55s)\n      --- FAIL: Test_PostgreGet/Postgre_FilteringCondition_II (0.02s)\n        PostgreGet_test.go:81: \n          TestCase: Postgre FilteringCondition II failed.\n           DataSource.Get \n          returned \n          [] \n          instead of expected \n          [0xc4200a4380]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  --- FAIL: Test_PostgreStore (0.29s)\n      --- FAIL: Test_PostgreStore/Postgre_Store_One (0.28s)\n        PostgreStore_test.go:82: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc420224200 0xc420224280 0xc420224300 0xc420224380] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.874s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.884258862s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.011s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\" -run /Postgre` | done: 1.245402229s ]\n  --- FAIL: Test_ExasolGet (0.01s)\n    ExasolGet_test.go:43: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  --- FAIL: Test_ExasolStore (0.01s)\n    ExasolStore_test.go:50: Getter DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:DataProvider : Failed to run query 'SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')' due to error: pq: column \"TimeWithTimeZone\" does not exist}]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:DataProvider : Failed to run query 'SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)' due to error: pq: column \"TimeWithTimeZone\" does not exist}]\n  --- FAIL: Test_PostgreGet (0.14s)\n      --- FAIL: Test_PostgreGet/Postgre_FilteringCondition_I (0.13s)\n        PostgreGet_test.go:77: \n          TestCase: Postgre FilteringCondition I failed.\n           DataSource.Get failed \n          with Error \n          CustomErrors.Error{Type:InvalidOperation, Message:DataSource/SqlRows: Failed to execute instruction due to error: CustomErrors.Error{Type:InvalidOperation, Message:DataProvider : Failed to run query 'SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')' due to error: pq: column \"TimeWithTimeZone\" does not exist}} \n          instead of expected \n          <nil>\n        PostgreGet_test.go:81: \n          TestCase: Postgre FilteringCondition I failed.\n           DataSource.Get \n          returned \n          [] \n          instead of expected \n          [0xc42008c300]\n      --- FAIL: Test_PostgreGet/Postgre_FilteringCondition_II (0.01s)\n        PostgreGet_test.go:77: \n          TestCase: Postgre FilteringCondition II failed.\n           DataSource.Get failed \n          with Error \n          CustomErrors.Error{Type:InvalidOperation, Message:DataSource/SqlRows: Failed to execute instruction due to error: CustomErrors.Error{Type:InvalidOperation, Message:DataProvider : Failed to run query 'SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)' due to error: pq: column \"TimeWithTimeZone\" does not exist}} \n          instead of expected \n          <nil>\n        PostgreGet_test.go:81: \n          TestCase: Postgre FilteringCondition II failed.\n           DataSource.Get \n          returned \n          [] \n          instead of expected \n          [0xc42008c380]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:DataProvider : Failed to run query 'INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL' due to error: pq: column \"TimeWithTimeZone\" of relation \"Test_DataSource_Get\" does not exist}]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:DataProvider : Failed to run query 'SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)' due to error: pq: column \"TimeWithTimeZone\" does not exist}]\n  --- FAIL: Test_PostgreStore (0.21s)\n      --- FAIL: Test_PostgreStore/Postgre_Store_One (0.20s)\n        PostgreStore_test.go:78: \n          TestCase: Postgre Store One failed.\n           DataSource.Store failed \n          with Error \n          CustomErrors.Error{Type:InvalidOperation, Message:DataSource/SqlExec: Failed to execute instruction due to error: CustomErrors.Error{Type:InvalidOperation, Message:DataProvider : Failed to run query 'INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL' due to error: pq: column \"TimeWithTimeZone\" of relation \"Test_DataSource_Get\" does not exist}} \n          instead of expected \n          <nil>\n        PostgreStore_test.go:82: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2021-01-03 04:06:17 +0200 +0200 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.377s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', TIMESTAMP WITH TIME ZONE '20210103 04:06:17.000+0200', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"TimeWithTimeZone\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.88398071s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tag=integration -run /Postgre` | done: 620.68808ms ]\n  exit status 2\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  \n  flag provided but not defined: -tag\n  Usage of /var/folders/6m/gmln2l8j2f32g1k7j2xl5kkm0000gp/T/go-build669363556/_/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests/_test/IntegrationTests.test:\n    -test.bench string\n        regular expression per path component to select benchmarks to run\n    -test.benchmem\n        print memory allocations for benchmarks\n    -test.benchtime duration\n        approximate run time for each benchmark (default 1s)\n    -test.blockprofile string\n        write a goroutine blocking profile to the named file after execution\n    -test.blockprofilerate int\n        if >= 0, calls runtime.SetBlockProfileRate() (default 1)\n    -test.count n\n        run tests and benchmarks n times (default 1)\n    -test.coverprofile string\n        write a coverage profile to the named file after execution\n    -test.cpu string\n        comma-separated list of number of CPUs to use for each test\n    -test.cpuprofile string\n        write a cpu profile to the named file during execution\n    -test.memprofile string\n        write a memory profile to the named file after execution\n    -test.memprofilerate int\n        if >=0, sets runtime.MemProfileRate\n    -test.outputdir string\n        directory in which to write profiles\n    -test.parallel int\n        maximum test parallelism (default 4)\n    -test.run string\n        regular expression to select tests and examples to run\n    -test.short\n        run smaller test suite to save time\n    -test.timeout duration\n        if positive, sets an aggregate time limit for all tests\n    -test.trace string\n        write an execution trace to the named file after execution\n    -test.v\n        verbose: print additional output\n  \n  exit status 1\n[ `go test -tags \"integration\" -run /Postgre` | done: 213.115119ms ]\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests [build failed]\n  \n  # _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests\n  ./PostgreGet_test.go:36: unknown Models.PostgreDataSourceGet field 'TimeWithTimeZone' in struct literal\n  ./PostgreGet_test.go:48: unknown Models.PostgreDataSourceGet field 'TimeWithTimeZone' in struct literal\n  ./PostgreStore_test.go:35: unknown Models.PostgreDataSourceGet field 'TimeWithTimeZone' in struct literal\n  \n  exit status 2\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.859792101s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.012s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] # \n[ `sh go build . errors && go test -i && go test && go test -bench=. && go vet && go generate` | done: 1.828811752s ]\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  PASS\n  ok    _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.010s\n  \n  testing: warning: no tests to run\n  testing: warning: no tests to run\n[ `go test -tags \"integration\" -run /Postgre` | done: 1.40691634s ]\n  --- FAIL: Test_ExasolGet (0.01s)\n    ExasolGet_test.go:43: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  --- FAIL: Test_ExasolStore (0.01s)\n    ExasolStore_test.go:50: Getter DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  --- FAIL: Test_PostgreGet (0.15s)\n      --- FAIL: Test_PostgreGet/Postgre_FilteringCondition_II (0.02s)\n        PostgreGet_test.go:79: \n          TestCase: Postgre FilteringCondition II failed.\n           DataSource.Get \n          returned \n          [] \n          instead of expected \n          [0xc4200560e0]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  --- FAIL: Test_PostgreStore (0.30s)\n      --- FAIL: Test_PostgreStore/Postgre_Store_One (0.30s)\n        PostgreStore_test.go:82: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc420290540] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.478s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n[ `go test -tags \"integration\" -run /Postgre*` | done: 1.39336745s ]\n  --- FAIL: Test_ExasolGet (0.01s)\n    ExasolGet_test.go:43: DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  --- FAIL: Test_ExasolStore (0.01s)\n    ExasolStore_test.go:50: Getter DataSource Builder returned Error: CustomErrors.Error{Type:InvalidArgument, Message:Data Provider Builder threw Error: CustomErrors.Error{Type:InvalidOperation, Message:BuildExasolSqlRowsDataProviderFromConfig : Failed to open connection to Exasol db due to error SQLDriverConnect: {体㠰3} [unixODBC]䕛䅘体嵌䕛䅘潓畬楴湯搠楲敶嵲湉慶楬⁤獵牥渠浡⁥灳捥晩敩㩤甠敳⁲慮敭椠⁳浥瑰⁹牯挠湡琧戠⁥潣癮牥整⁤潴唠䙔㠭.}}\n  --- FAIL: Test_PostgreGet (0.17s)\n      --- FAIL: Test_PostgreGet/Postgre_FilteringCondition_II (0.02s)\n        PostgreGet_test.go:79: \n          TestCase: Postgre FilteringCondition II failed.\n           DataSource.Get \n          returned \n          [] \n          instead of expected \n          [0xc4200540e0]\n  Critical [CustomErrors.Error{Type:InvalidOperation, Message:no LastInsertId available}]\n  --- FAIL: Test_PostgreStore (0.30s)\n      --- FAIL: Test_PostgreStore/Postgre_Store_One (0.30s)\n        PostgreStore_test.go:82: \n          TestCase: Postgre Store One failed.\n           DataSource.Store \n          stored \n          [0xc42028a930 0xc42028a9a0] \n          instead of expected \n          [{AnotherString 4 false 2011-01-31 00:00:00 +0000 +0000 2.89 <nil> <nil> <nil> <nil> <nil>}]\n  FAIL\n  exit status 1\n  FAIL  _/Users/julian/Projects/Go-Libs/DataSource/IntegrationTests 0.507s\n  \n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String')\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"StringColumn\" IN ('String') AND \"FloatColumn\" IN (2.843)\n  queryString INSERT INTO \"Test\".\"Test_DataSource_Get\" (\"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\") SELECT 'AnotherString', 4, 'false', TIMESTAMP WITH TIME ZONE '20110131 00:00:00.000+0000', 2.89, NULL, NULL, NULL, NULL, NULL\n  queryString SELECT \"StringColumn\", \"IntColumn\", \"BoolColumn\", \"TimeColumn\", \"FloatColumn\", \"StringPtrColumn\", \"IntPtrColumn\", \"BoolPtrColumn\", \"TimePtrColumn\", \"FloatPtrColumn\" FROM \"Test\".\"Test_DataSource_Get\" WHERE \"IntColumn\" IN (4)\n  \n  exit status 1\n \n[ ~/Projects/Go-Libs/DataSource/IntegrationTests/ ] #",
		"GoSublime r16.07.09-1 9o: type `help` for help and command documentation",
		"cls",
		"go test -tags \"integration\" -run /Postgre",
		"go test -tags \"integration\" -run Postgre/Postgre"
	],
	"9o.hist./Users/julian/Projects/Go-Projects/EcbExchangeRateLoader":
	[
		"go get \"github.com/alexbrainman/odbc\""
	],
	"9o.hist./Users/julian/Projects/Go-Projects/SqlDataSource_IntegrationTests":
	[
		"go run",
		"go run *.go",
		"ls",
		"go run postgresTest.go"
	],
	"9o.hist./Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src":
	[
		"cd /Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src/github.com/alexbrainman",
		"cd github.com"
	],
	"9o.hist./Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src/github.com":
	[
		"cd alexbrainman"
	],
	"9o.hist./Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src/github.com/alexbrainman":
	[
		"cd odbc"
	],
	"9o.hist./Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src/github.com/alexbrainman/odbc":
	[
		"go test -mssrv=46.4.71.131 -msuser=godev -mspass=godev -v",
		"go test -mssrv=46.4.71.131 -msdb=BI_Data -msuser=godev -mspass=godev -v -run=MS",
		"go test -mssrv=46.4.71.131 -msuser=godev -mspass=godev -v -run=MS",
		"ping 46.4.71.131",
		"go test -mssrv=46.4.71.131 -msdb=master -msuser=godev -mspass=go test -v -run=MS",
		"go test -mssrv=46.4.71.131 -msdb=master -msuser=godev -mspass=godev -v -run=MS"
	],
	"9o.hist./Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src/storages":
	[
		"tsql -C",
		"cd $GOPATH/src/github.com/alexbrainman/odbc/",
		"cd ..",
		"isql MYDSN godev godev -v",
		"cls"
	],
	"9o.hist./Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src/storages/internal":
	[
		"go get all",
		"go vet --help",
		"go get github.com/alexbrainman/odbc/api",
		"cd $GOPATH/src/github.com/alexbrainman/odbc/"
	],
	"9o.hist./Users/julian/Projects/GoCommonLibrary/Jobs/GO/Libs/src/storages/internal/SqlDialects":
	[
		"go test -v"
	],
	"9o.hist./Users/julian/Projects/GoPacksAndLibs/src":
	[
		"git clone git://github.com/weigj/go-odbc.git odbc",
		"cd odbc",
		"go run goODBCtest.go"
	],
	"9o.hist./Users/julian/Projects/GoPacksAndLibs/src/odbc":
	[
		"go install"
	],
	"ann": "a16.07.09-1",
	"install_version": "r16.07.09-1",
	"version": "r16.07.09-1"
}
